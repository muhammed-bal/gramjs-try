{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomMessage = void 0;\nconst senderGetter_1 = require(\"./senderGetter\");\nconst api_1 = require(\"../api\");\nconst chatGetter_1 = require(\"./chatGetter\");\nconst utils = __importStar(require(\"../../Utils\"));\nconst forward_1 = require(\"./forward\");\nconst file_1 = require(\"./file\");\nconst Helpers_1 = require(\"../../Helpers\");\nconst users_1 = require(\"../../client/users\");\nconst Logger_1 = require(\"../../extensions/Logger\");\nconst messageButton_1 = require(\"./messageButton\");\nconst inspect_1 = require(\"../../inspect\");\n/**\r\n * This custom class aggregates both {@link Api.Message} and {@link Api.MessageService} to ease accessing their members.<br/>\r\n * <br/>\r\n * Remember that this class implements {@link ChatGetter} and {@link SenderGetter}<br/>\r\n * which means you have access to all their sender and chat properties and methods.\r\n */\nclass CustomMessage extends senderGetter_1.SenderGetter {\n  constructor(args) {\n    super();\n    this.init(args);\n  }\n  [inspect_1.inspect.custom]() {\n    return (0, Helpers_1.betterConsoleLog)(this);\n  }\n  init({\n    id,\n    peerId = undefined,\n    date = undefined,\n    out = undefined,\n    mentioned = undefined,\n    mediaUnread = undefined,\n    silent = undefined,\n    post = undefined,\n    fromId = undefined,\n    replyTo = undefined,\n    message = undefined,\n    fwdFrom = undefined,\n    viaBotId = undefined,\n    media = undefined,\n    replyMarkup = undefined,\n    entities = undefined,\n    views = undefined,\n    editDate = undefined,\n    postAuthor = undefined,\n    groupedId = undefined,\n    fromScheduled = undefined,\n    legacy = undefined,\n    editHide = undefined,\n    pinned = undefined,\n    restrictionReason = undefined,\n    forwards = undefined,\n    replies = undefined,\n    action = undefined,\n    reactions = undefined,\n    noforwards = undefined,\n    ttlPeriod = undefined,\n    _entities = new Map()\n  }) {\n    if (!id) throw new Error(\"id is a required attribute for Message\");\n    let senderId = undefined;\n    if (fromId) {\n      senderId = utils.getPeerId(fromId);\n    } else if (peerId) {\n      if (post || !out && peerId instanceof api_1.Api.PeerUser) {\n        senderId = utils.getPeerId(peerId);\n      }\n    }\n    // Common properties to all messages\n    this._entities = _entities;\n    this.out = out;\n    this.mentioned = mentioned;\n    this.mediaUnread = mediaUnread;\n    this.silent = silent;\n    this.post = post;\n    this.post = post;\n    this.fromScheduled = fromScheduled;\n    this.legacy = legacy;\n    this.editHide = editHide;\n    this.ttlPeriod = ttlPeriod;\n    this.id = id;\n    this.fromId = fromId;\n    this.peerId = peerId;\n    this.fwdFrom = fwdFrom;\n    this.viaBotId = viaBotId;\n    this.replyTo = replyTo;\n    this.date = date;\n    this.message = message;\n    this.media = media instanceof api_1.Api.MessageMediaEmpty ? media : undefined;\n    this.replyMarkup = replyMarkup;\n    this.entities = entities;\n    this.views = views;\n    this.forwards = forwards;\n    this.replies = replies;\n    this.editDate = editDate;\n    this.pinned = pinned;\n    this.postAuthor = postAuthor;\n    this.groupedId = groupedId;\n    this.restrictionReason = restrictionReason;\n    this.action = action;\n    this.noforwards = noforwards;\n    this.reactions = reactions;\n    this._client = undefined;\n    this._text = undefined;\n    this._file = undefined;\n    this._replyMessage = undefined;\n    this._buttons = undefined;\n    this._buttonsFlat = undefined;\n    this._buttonsCount = 0;\n    this._viaBot = undefined;\n    this._viaInputBot = undefined;\n    this._actionEntities = undefined;\n    // Note: these calls would reset the client\n    chatGetter_1.ChatGetter.initChatClass(this, {\n      chatPeer: peerId,\n      broadcast: post\n    });\n    senderGetter_1.SenderGetter.initSenderClass(this, {\n      senderId: senderId ? (0, Helpers_1.returnBigInt)(senderId) : undefined\n    });\n    this._forward = undefined;\n  }\n  _finishInit(client, entities, inputChat) {\n    this._client = client;\n    const cache = client._entityCache;\n    if (this.senderId) {\n      [this._sender, this._inputSender] = utils._getEntityPair(this.senderId.toString(), entities, cache);\n    }\n    if (this.chatId) {\n      [this._chat, this._inputChat] = utils._getEntityPair(this.chatId.toString(), entities, cache);\n    }\n    if (inputChat) {\n      // This has priority\n      this._inputChat = inputChat;\n    }\n    if (this.viaBotId) {\n      [this._viaBot, this._viaInputBot] = utils._getEntityPair(this.viaBotId.toString(), entities, cache);\n    }\n    if (this.fwdFrom) {\n      this._forward = new forward_1.Forward(this._client, this.fwdFrom, entities);\n    }\n    if (this.action) {\n      if (this.action instanceof api_1.Api.MessageActionChatAddUser || this.action instanceof api_1.Api.MessageActionChatCreate) {\n        this._actionEntities = this.action.users.map(i => entities.get(i.toString()));\n      } else if (this.action instanceof api_1.Api.MessageActionChatDeleteUser) {\n        this._actionEntities = [entities.get(this.action.userId.toString())];\n      } else if (this.action instanceof api_1.Api.MessageActionChatJoinedByLink) {\n        this._actionEntities = [entities.get(utils.getPeerId(new api_1.Api.PeerChannel({\n          channelId: this.action.inviterId\n        })))];\n      } else if (this.action instanceof api_1.Api.MessageActionChannelMigrateFrom) {\n        this._actionEntities = [entities.get(utils.getPeerId(new api_1.Api.PeerChat({\n          chatId: this.action.chatId\n        })))];\n      }\n    }\n  }\n  get client() {\n    return this._client;\n  }\n  get text() {\n    if (this._text === undefined && this._client) {\n      if (!this._client.parseMode) {\n        this._text = this.message;\n      } else {\n        this._text = this._client.parseMode.unparse(this.message || \"\", this.entities || []);\n      }\n    }\n    return this._text || \"\";\n  }\n  set text(value) {\n    this._text = value;\n    if (this._client && this._client.parseMode) {\n      [this.message, this.entities] = this._client.parseMode.parse(value);\n    } else {\n      this.message = value;\n      this.entities = [];\n    }\n  }\n  get rawText() {\n    return this.message || \"\";\n  }\n  /**\r\n   * @param {string} value\r\n   */\n  set rawText(value) {\n    this.message = value;\n    this.entities = [];\n    this._text = \"\";\n  }\n  get isReply() {\n    return !!this.replyTo;\n  }\n  get forward() {\n    return this._forward;\n  }\n  async _refetchSender() {\n    await this._reloadMessage();\n  }\n  /**\r\n   * Re-fetches this message to reload the sender and chat entities,\r\n   * along with their input versions.\r\n   * @private\r\n   */\n  async _reloadMessage() {\n    if (!this._client) return;\n    let msg = undefined;\n    try {\n      const chat = this.isChannel ? await this.getInputChat() : undefined;\n      let temp = await this._client.getMessages(chat, {\n        ids: this.id\n      });\n      if (temp) {\n        msg = temp[0];\n      }\n    } catch (e) {\n      this._client._log.error(\"Got error while trying to finish init message with id \" + this.id);\n      if (this._client._log.canSend(Logger_1.LogLevel.ERROR)) {\n        console.error(e);\n      }\n    }\n    if (msg == undefined) return;\n    this._sender = msg._sender;\n    this._inputSender = msg._inputSender;\n    this._chat = msg._chat;\n    this._inputChat = msg._inputChat;\n    this._viaBot = msg._viaBot;\n    this._viaInputBot = msg._viaInputBot;\n    this._forward = msg._forward;\n    this._actionEntities = msg._actionEntities;\n  }\n  /**\r\n   * Returns a list of lists of `MessageButton <MessageButton>`, if any.\r\n   * Otherwise, it returns `undefined`.\r\n   */\n  get buttons() {\n    if (!this._buttons && this.replyMarkup) {\n      if (!this.inputChat) {\n        return;\n      }\n      try {\n        const bot = this._neededMarkupBot();\n        this._setButtons(this.inputChat, bot);\n      } catch (e) {\n        return;\n      }\n    }\n    return this._buttons;\n  }\n  /**\r\n   * Returns `buttons` when that property fails (this is rarely needed).\r\n   */\n  async getButtons() {\n    if (!this.buttons && this.replyMarkup) {\n      const chat = await this.getInputChat();\n      if (!chat) return;\n      let bot;\n      try {\n        bot = this._neededMarkupBot();\n      } catch (e) {\n        await this._reloadMessage();\n        bot = this._neededMarkupBot();\n      }\n      this._setButtons(chat, bot);\n    }\n    return this._buttons;\n  }\n  get buttonCount() {\n    if (!this._buttonsCount) {\n      if (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup) {\n        this._buttonsCount = this.replyMarkup.rows.map(r => r.buttons.length).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      } else {\n        this._buttonsCount = 0;\n      }\n    }\n    return this._buttonsCount;\n  }\n  get file() {\n    if (!this._file) {\n      const media = this.photo || this.document;\n      if (media) {\n        this._file = new file_1.File(media);\n      }\n    }\n    return this._file;\n  }\n  get photo() {\n    if (this.media instanceof api_1.Api.MessageMediaPhoto) {\n      if (this.media.photo instanceof api_1.Api.Photo) return this.media.photo;\n    } else if (this.action instanceof api_1.Api.MessageActionChatEditPhoto) {\n      return this.action.photo;\n    } else {\n      return this.webPreview && this.webPreview.photo instanceof api_1.Api.Photo ? this.webPreview.photo : undefined;\n    }\n    return undefined;\n  }\n  get document() {\n    if (this.media instanceof api_1.Api.MessageMediaDocument) {\n      if (this.media.document instanceof api_1.Api.Document) return this.media.document;\n    } else {\n      const web = this.webPreview;\n      return web && web.document instanceof api_1.Api.Document ? web.document : undefined;\n    }\n    return undefined;\n  }\n  get webPreview() {\n    if (this.media instanceof api_1.Api.MessageMediaWebPage) {\n      if (this.media.webpage instanceof api_1.Api.WebPage) return this.media.webpage;\n    }\n  }\n  get audio() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, attr => !attr.voice);\n  }\n  get voice() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, attr => !!attr.voice);\n  }\n  get video() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeVideo);\n  }\n  get videoNote() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeVideo, attr => !!attr.roundMessage);\n  }\n  get gif() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeAnimated);\n  }\n  get sticker() {\n    return this._documentByAttribute(api_1.Api.DocumentAttributeSticker);\n  }\n  get contact() {\n    if (this.media instanceof api_1.Api.MessageMediaContact) {\n      return this.media;\n    }\n  }\n  get game() {\n    if (this.media instanceof api_1.Api.MessageMediaGame) {\n      return this.media.game;\n    }\n  }\n  get geo() {\n    if (this.media instanceof api_1.Api.MessageMediaGeo || this.media instanceof api_1.Api.MessageMediaGeoLive || this.media instanceof api_1.Api.MessageMediaVenue) {\n      return this.media.geo;\n    }\n  }\n  get invoice() {\n    if (this.media instanceof api_1.Api.MessageMediaInvoice) {\n      return this.media;\n    }\n  }\n  get poll() {\n    if (this.media instanceof api_1.Api.MessageMediaPoll) {\n      return this.media;\n    }\n  }\n  get venue() {\n    if (this.media instanceof api_1.Api.MessageMediaVenue) {\n      return this.media;\n    }\n  }\n  get dice() {\n    if (this.media instanceof api_1.Api.MessageMediaDice) {\n      return this.media;\n    }\n  }\n  get actionEntities() {\n    return this._actionEntities;\n  }\n  get viaBot() {\n    return this._viaBot;\n  }\n  get viaInputBot() {\n    return this._viaInputBot;\n  }\n  get replyToMsgId() {\n    var _a;\n    return (_a = this.replyTo) === null || _a === void 0 ? void 0 : _a.replyToMsgId;\n  }\n  get toId() {\n    if (this._client && !this.out && this.isPrivate) {\n      return new api_1.Api.PeerUser({\n        userId: (0, users_1._selfId)(this._client)\n      });\n    }\n    return this.peerId;\n  }\n  getEntitiesText(cls) {\n    let ent = this.entities;\n    if (!ent || ent.length == 0) return;\n    if (cls) {\n      ent = ent.filter(v => v instanceof cls);\n    }\n    const texts = utils.getInnerText(this.message || \"\", ent);\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    return zip([ent, texts]);\n  }\n  async getReplyMessage() {\n    if (!this._replyMessage && this._client) {\n      if (!this.replyTo) return undefined;\n      // Bots cannot access other bots' messages by their ID.\n      // However they can access them through replies...\n      this._replyMessage = (await this._client.getMessages(this.isChannel ? await this.getInputChat() : undefined, {\n        ids: new api_1.Api.InputMessageReplyTo({\n          id: this.id\n        })\n      }))[0];\n      if (!this._replyMessage) {\n        // ...unless the current message got deleted.\n        //\n        // If that's the case, give it a second chance accessing\n        // directly by its ID.\n        this._replyMessage = (await this._client.getMessages(this.isChannel ? this._inputChat : undefined, {\n          ids: this.replyToMsgId\n        }))[0];\n      }\n    }\n    return this._replyMessage;\n  }\n  async respond(params) {\n    if (this._client) {\n      return this._client.sendMessage(await this.getInputChat(), params);\n    }\n  }\n  async reply(params) {\n    if (this._client) {\n      params.replyTo = this.id;\n      return this._client.sendMessage(await this.getInputChat(), params);\n    }\n  }\n  async forwardTo(entity) {\n    if (this._client) {\n      entity = await this._client.getInputEntity(entity);\n      const params = {\n        messages: [this.id],\n        fromPeer: await this.getInputChat()\n      };\n      return this._client.forwardMessages(entity, params);\n    }\n  }\n  async edit(params) {\n    const param = params;\n    if (this.fwdFrom || !this.out || !this._client) return undefined;\n    if (param.linkPreview == undefined) {\n      param.linkPreview = !!this.webPreview;\n    }\n    if (param.buttons == undefined) {\n      param.buttons = this.replyMarkup;\n    }\n    param.message = this.id;\n    return this._client.editMessage(await this.getInputChat(), param);\n  }\n  async delete({\n    revoke\n  } = {\n    revoke: false\n  }) {\n    if (this._client) {\n      return this._client.deleteMessages(await this.getInputChat(), [this.id], {\n        revoke\n      });\n    }\n  }\n  async pin(params) {\n    if (this._client) {\n      const entity = await this.getInputChat();\n      if (entity === undefined) {\n        throw Error(\"Failed to pin message due to cannot get input chat.\");\n      }\n      return this._client.pinMessage(entity, this.id, params);\n    }\n  }\n  async unpin(params) {\n    if (this._client) {\n      const entity = await this.getInputChat();\n      if (entity === undefined) {\n        throw Error(\"Failed to unpin message due to cannot get input chat.\");\n      }\n      return this._client.unpinMessage(entity, this.id, params);\n    }\n  }\n  async downloadMedia(params) {\n    // small hack for patched method\n    if (this._client) return this._client.downloadMedia(this, params || {});\n  }\n  async markAsRead() {\n    if (this._client) {\n      const entity = await this.getInputChat();\n      if (entity === undefined) {\n        throw Error(`Failed to mark message id ${this.id} as read due to cannot get input chat.`);\n      }\n      return this._client.markAsRead(entity, this.id);\n    }\n  }\n  async click({\n    i,\n    j,\n    text,\n    filter,\n    data,\n    sharePhone,\n    shareGeo,\n    password\n  }) {\n    if (!this.client) {\n      return;\n    }\n    if (data) {\n      const chat = await this.getInputChat();\n      if (!chat) {\n        return;\n      }\n      const button = new api_1.Api.KeyboardButtonCallback({\n        text: \"\",\n        data: data\n      });\n      return await new messageButton_1.MessageButton(this.client, button, chat, undefined, this.id).click({\n        sharePhone: sharePhone,\n        shareGeo: shareGeo,\n        password: password\n      });\n    }\n    if (this.poll) {\n      function findPoll(answers) {\n        if (i != undefined) {\n          if (Array.isArray(i)) {\n            const corrects = [];\n            for (let x = 0; x < i.length; x++) {\n              corrects.push(answers[x].option);\n            }\n            return corrects;\n          }\n          return [answers[i].option];\n        }\n        if (text != undefined) {\n          if (typeof text == \"function\") {\n            for (const answer of answers) {\n              if (text(answer.text)) {\n                return [answer.option];\n              }\n            }\n          } else {\n            for (const answer of answers) {\n              if (answer.text == text) {\n                return [answer.option];\n              }\n            }\n          }\n          return;\n        }\n        if (filter != undefined) {\n          for (const answer of answers) {\n            if (filter(answer)) {\n              return [answer.option];\n            }\n          }\n          return;\n        }\n      }\n      const options = findPoll(this.poll.poll.answers) || [];\n      return await this.client.invoke(new api_1.Api.messages.SendVote({\n        peer: this.inputChat,\n        msgId: this.id,\n        options: options\n      }));\n    }\n    if (!(await this.getButtons())) {\n      return; // Accessing the property sets this._buttons[_flat]\n    }\n\n    function findButton(self) {\n      if (!self._buttonsFlat || !self._buttons) {\n        return;\n      }\n      if (Array.isArray(i)) {\n        i = i[0];\n      }\n      if (text != undefined) {\n        if (typeof text == \"function\") {\n          for (const button of self._buttonsFlat) {\n            if (text(button.text)) {\n              return button;\n            }\n          }\n        } else {\n          for (const button of self._buttonsFlat) {\n            if (button.text == text) {\n              return button;\n            }\n          }\n        }\n        return;\n      }\n      if (filter != undefined) {\n        for (const button of self._buttonsFlat) {\n          if (filter(button)) {\n            return button;\n          }\n        }\n        return;\n      }\n      if (i == undefined) {\n        i = 0;\n      }\n      if (j == undefined) {\n        return self._buttonsFlat[i];\n      } else {\n        return self._buttons[i][j];\n      }\n    }\n    const button = findButton(this);\n    if (button) {\n      return await button.click({\n        sharePhone: sharePhone,\n        shareGeo: shareGeo,\n        password: password\n      });\n    }\n  }\n  /**\r\n   * Helper methods to set the buttons given the input sender and chat.\r\n   */\n  _setButtons(chat, bot) {\n    if (this.client && (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\n      this._buttons = [];\n      this._buttonsFlat = [];\n      for (const row of this.replyMarkup.rows) {\n        const tmp = [];\n        for (const button of row.buttons) {\n          const btn = new messageButton_1.MessageButton(this.client, button, chat, bot, this.id);\n          tmp.push(btn);\n          this._buttonsFlat.push(btn);\n        }\n        this._buttons.push(tmp);\n      }\n    }\n  }\n  /**\r\n   *Returns the input peer of the bot that's needed for the reply markup.\r\n     This is necessary for `KeyboardButtonSwitchInline` since we need\r\n   to know what bot we want to start. Raises ``Error`` if the bot\r\n   cannot be found but is needed. Returns `None` if it's not needed.\r\n   */\n  _neededMarkupBot() {\n    if (!this.client || this.replyMarkup == undefined) {\n      return;\n    }\n    if (!(this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\n      return;\n    }\n    for (const row of this.replyMarkup.rows) {\n      for (const button of row.buttons) {\n        if (button instanceof api_1.Api.KeyboardButtonSwitchInline) {\n          if (button.samePeer || !this.viaBotId) {\n            const bot = this._inputSender;\n            if (!bot) throw new Error(\"No input sender\");\n            return bot;\n          } else {\n            const ent = this.client._entityCache.get(this.viaBotId);\n            if (!ent) throw new Error(\"No input sender\");\n            return ent;\n          }\n        }\n      }\n    }\n  }\n  // TODO fix this\n  _documentByAttribute(kind, condition) {\n    const doc = this.document;\n    if (doc) {\n      for (const attr of doc.attributes) {\n        if (attr instanceof kind) {\n          if (condition == undefined || typeof condition == \"function\" && condition(attr)) {\n            return doc;\n          }\n          return undefined;\n        }\n      }\n    }\n  }\n}\nexports.CustomMessage = CustomMessage;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","CustomMessage","senderGetter_1","require","api_1","chatGetter_1","utils","forward_1","file_1","Helpers_1","users_1","Logger_1","messageButton_1","inspect_1","SenderGetter","constructor","args","init","inspect","custom","betterConsoleLog","id","peerId","date","out","mentioned","mediaUnread","silent","post","fromId","replyTo","message","fwdFrom","viaBotId","media","replyMarkup","entities","views","editDate","postAuthor","groupedId","fromScheduled","legacy","editHide","pinned","restrictionReason","forwards","replies","action","reactions","noforwards","ttlPeriod","_entities","Map","Error","senderId","getPeerId","Api","PeerUser","MessageMediaEmpty","_client","_text","_file","_replyMessage","_buttons","_buttonsFlat","_buttonsCount","_viaBot","_viaInputBot","_actionEntities","ChatGetter","initChatClass","chatPeer","broadcast","initSenderClass","returnBigInt","_forward","_finishInit","client","inputChat","cache","_entityCache","_sender","_inputSender","_getEntityPair","toString","chatId","_chat","_inputChat","Forward","MessageActionChatAddUser","MessageActionChatCreate","users","map","i","MessageActionChatDeleteUser","userId","MessageActionChatJoinedByLink","PeerChannel","channelId","inviterId","MessageActionChannelMigrateFrom","PeerChat","text","parseMode","unparse","parse","rawText","isReply","forward","_refetchSender","_reloadMessage","msg","chat","isChannel","getInputChat","temp","getMessages","ids","e","_log","error","canSend","LogLevel","ERROR","console","buttons","bot","_neededMarkupBot","_setButtons","getButtons","buttonCount","ReplyInlineMarkup","ReplyKeyboardMarkup","rows","r","length","reduce","a","b","file","photo","document","File","MessageMediaPhoto","Photo","MessageActionChatEditPhoto","webPreview","MessageMediaDocument","Document","web","MessageMediaWebPage","webpage","WebPage","audio","_documentByAttribute","DocumentAttributeAudio","attr","voice","video","DocumentAttributeVideo","videoNote","roundMessage","gif","DocumentAttributeAnimated","sticker","DocumentAttributeSticker","contact","MessageMediaContact","game","MessageMediaGame","geo","MessageMediaGeo","MessageMediaGeoLive","MessageMediaVenue","invoice","MessageMediaInvoice","poll","MessageMediaPoll","venue","dice","MessageMediaDice","actionEntities","viaBot","viaInputBot","replyToMsgId","_a","toId","isPrivate","_selfId","getEntitiesText","cls","ent","filter","texts","getInnerText","zip","_","c","row","getReplyMessage","InputMessageReplyTo","respond","params","sendMessage","reply","forwardTo","entity","getInputEntity","messages","fromPeer","forwardMessages","edit","param","linkPreview","editMessage","delete","revoke","deleteMessages","pin","pinMessage","unpin","unpinMessage","downloadMedia","markAsRead","click","j","data","sharePhone","shareGeo","password","button","KeyboardButtonCallback","MessageButton","findPoll","answers","Array","isArray","corrects","x","push","option","answer","options","invoke","SendVote","peer","msgId","findButton","self","tmp","btn","KeyboardButtonSwitchInline","samePeer","kind","condition","doc","attributes"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/tl/custom/message.js"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CustomMessage = void 0;\r\nconst senderGetter_1 = require(\"./senderGetter\");\r\nconst api_1 = require(\"../api\");\r\nconst chatGetter_1 = require(\"./chatGetter\");\r\nconst utils = __importStar(require(\"../../Utils\"));\r\nconst forward_1 = require(\"./forward\");\r\nconst file_1 = require(\"./file\");\r\nconst Helpers_1 = require(\"../../Helpers\");\r\nconst users_1 = require(\"../../client/users\");\r\nconst Logger_1 = require(\"../../extensions/Logger\");\r\nconst messageButton_1 = require(\"./messageButton\");\r\nconst inspect_1 = require(\"../../inspect\");\r\n/**\r\n * This custom class aggregates both {@link Api.Message} and {@link Api.MessageService} to ease accessing their members.<br/>\r\n * <br/>\r\n * Remember that this class implements {@link ChatGetter} and {@link SenderGetter}<br/>\r\n * which means you have access to all their sender and chat properties and methods.\r\n */\r\nclass CustomMessage extends senderGetter_1.SenderGetter {\r\n    constructor(args) {\r\n        super();\r\n        this.init(args);\r\n    }\r\n    [inspect_1.inspect.custom]() {\r\n        return (0, Helpers_1.betterConsoleLog)(this);\r\n    }\r\n    init({ id, peerId = undefined, date = undefined, out = undefined, mentioned = undefined, mediaUnread = undefined, silent = undefined, post = undefined, fromId = undefined, replyTo = undefined, message = undefined, fwdFrom = undefined, viaBotId = undefined, media = undefined, replyMarkup = undefined, entities = undefined, views = undefined, editDate = undefined, postAuthor = undefined, groupedId = undefined, fromScheduled = undefined, legacy = undefined, editHide = undefined, pinned = undefined, restrictionReason = undefined, forwards = undefined, replies = undefined, action = undefined, reactions = undefined, noforwards = undefined, ttlPeriod = undefined, _entities = new Map(), }) {\r\n        if (!id)\r\n            throw new Error(\"id is a required attribute for Message\");\r\n        let senderId = undefined;\r\n        if (fromId) {\r\n            senderId = utils.getPeerId(fromId);\r\n        }\r\n        else if (peerId) {\r\n            if (post || (!out && peerId instanceof api_1.Api.PeerUser)) {\r\n                senderId = utils.getPeerId(peerId);\r\n            }\r\n        }\r\n        // Common properties to all messages\r\n        this._entities = _entities;\r\n        this.out = out;\r\n        this.mentioned = mentioned;\r\n        this.mediaUnread = mediaUnread;\r\n        this.silent = silent;\r\n        this.post = post;\r\n        this.post = post;\r\n        this.fromScheduled = fromScheduled;\r\n        this.legacy = legacy;\r\n        this.editHide = editHide;\r\n        this.ttlPeriod = ttlPeriod;\r\n        this.id = id;\r\n        this.fromId = fromId;\r\n        this.peerId = peerId;\r\n        this.fwdFrom = fwdFrom;\r\n        this.viaBotId = viaBotId;\r\n        this.replyTo = replyTo;\r\n        this.date = date;\r\n        this.message = message;\r\n        this.media = media instanceof api_1.Api.MessageMediaEmpty ? media : undefined;\r\n        this.replyMarkup = replyMarkup;\r\n        this.entities = entities;\r\n        this.views = views;\r\n        this.forwards = forwards;\r\n        this.replies = replies;\r\n        this.editDate = editDate;\r\n        this.pinned = pinned;\r\n        this.postAuthor = postAuthor;\r\n        this.groupedId = groupedId;\r\n        this.restrictionReason = restrictionReason;\r\n        this.action = action;\r\n        this.noforwards = noforwards;\r\n        this.reactions = reactions;\r\n        this._client = undefined;\r\n        this._text = undefined;\r\n        this._file = undefined;\r\n        this._replyMessage = undefined;\r\n        this._buttons = undefined;\r\n        this._buttonsFlat = undefined;\r\n        this._buttonsCount = 0;\r\n        this._viaBot = undefined;\r\n        this._viaInputBot = undefined;\r\n        this._actionEntities = undefined;\r\n        // Note: these calls would reset the client\r\n        chatGetter_1.ChatGetter.initChatClass(this, { chatPeer: peerId, broadcast: post });\r\n        senderGetter_1.SenderGetter.initSenderClass(this, {\r\n            senderId: senderId ? (0, Helpers_1.returnBigInt)(senderId) : undefined,\r\n        });\r\n        this._forward = undefined;\r\n    }\r\n    _finishInit(client, entities, inputChat) {\r\n        this._client = client;\r\n        const cache = client._entityCache;\r\n        if (this.senderId) {\r\n            [this._sender, this._inputSender] = utils._getEntityPair(this.senderId.toString(), entities, cache);\r\n        }\r\n        if (this.chatId) {\r\n            [this._chat, this._inputChat] = utils._getEntityPair(this.chatId.toString(), entities, cache);\r\n        }\r\n        if (inputChat) {\r\n            // This has priority\r\n            this._inputChat = inputChat;\r\n        }\r\n        if (this.viaBotId) {\r\n            [this._viaBot, this._viaInputBot] = utils._getEntityPair(this.viaBotId.toString(), entities, cache);\r\n        }\r\n        if (this.fwdFrom) {\r\n            this._forward = new forward_1.Forward(this._client, this.fwdFrom, entities);\r\n        }\r\n        if (this.action) {\r\n            if (this.action instanceof api_1.Api.MessageActionChatAddUser ||\r\n                this.action instanceof api_1.Api.MessageActionChatCreate) {\r\n                this._actionEntities = this.action.users.map((i) => entities.get(i.toString()));\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChatDeleteUser) {\r\n                this._actionEntities = [\r\n                    entities.get(this.action.userId.toString()),\r\n                ];\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChatJoinedByLink) {\r\n                this._actionEntities = [\r\n                    entities.get(utils.getPeerId(new api_1.Api.PeerChannel({\r\n                        channelId: this.action.inviterId,\r\n                    }))),\r\n                ];\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChannelMigrateFrom) {\r\n                this._actionEntities = [\r\n                    entities.get(utils.getPeerId(new api_1.Api.PeerChat({ chatId: this.action.chatId }))),\r\n                ];\r\n            }\r\n        }\r\n    }\r\n    get client() {\r\n        return this._client;\r\n    }\r\n    get text() {\r\n        if (this._text === undefined && this._client) {\r\n            if (!this._client.parseMode) {\r\n                this._text = this.message;\r\n            }\r\n            else {\r\n                this._text = this._client.parseMode.unparse(this.message || \"\", this.entities || []);\r\n            }\r\n        }\r\n        return this._text || \"\";\r\n    }\r\n    set text(value) {\r\n        this._text = value;\r\n        if (this._client && this._client.parseMode) {\r\n            [this.message, this.entities] = this._client.parseMode.parse(value);\r\n        }\r\n        else {\r\n            this.message = value;\r\n            this.entities = [];\r\n        }\r\n    }\r\n    get rawText() {\r\n        return this.message || \"\";\r\n    }\r\n    /**\r\n     * @param {string} value\r\n     */\r\n    set rawText(value) {\r\n        this.message = value;\r\n        this.entities = [];\r\n        this._text = \"\";\r\n    }\r\n    get isReply() {\r\n        return !!this.replyTo;\r\n    }\r\n    get forward() {\r\n        return this._forward;\r\n    }\r\n    async _refetchSender() {\r\n        await this._reloadMessage();\r\n    }\r\n    /**\r\n     * Re-fetches this message to reload the sender and chat entities,\r\n     * along with their input versions.\r\n     * @private\r\n     */\r\n    async _reloadMessage() {\r\n        if (!this._client)\r\n            return;\r\n        let msg = undefined;\r\n        try {\r\n            const chat = this.isChannel ? await this.getInputChat() : undefined;\r\n            let temp = await this._client.getMessages(chat, { ids: this.id });\r\n            if (temp) {\r\n                msg = temp[0];\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._client._log.error(\"Got error while trying to finish init message with id \" +\r\n                this.id);\r\n            if (this._client._log.canSend(Logger_1.LogLevel.ERROR)) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        if (msg == undefined)\r\n            return;\r\n        this._sender = msg._sender;\r\n        this._inputSender = msg._inputSender;\r\n        this._chat = msg._chat;\r\n        this._inputChat = msg._inputChat;\r\n        this._viaBot = msg._viaBot;\r\n        this._viaInputBot = msg._viaInputBot;\r\n        this._forward = msg._forward;\r\n        this._actionEntities = msg._actionEntities;\r\n    }\r\n    /**\r\n     * Returns a list of lists of `MessageButton <MessageButton>`, if any.\r\n     * Otherwise, it returns `undefined`.\r\n     */\r\n    get buttons() {\r\n        if (!this._buttons && this.replyMarkup) {\r\n            if (!this.inputChat) {\r\n                return;\r\n            }\r\n            try {\r\n                const bot = this._neededMarkupBot();\r\n                this._setButtons(this.inputChat, bot);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n        }\r\n        return this._buttons;\r\n    }\r\n    /**\r\n     * Returns `buttons` when that property fails (this is rarely needed).\r\n     */\r\n    async getButtons() {\r\n        if (!this.buttons && this.replyMarkup) {\r\n            const chat = await this.getInputChat();\r\n            if (!chat)\r\n                return;\r\n            let bot;\r\n            try {\r\n                bot = this._neededMarkupBot();\r\n            }\r\n            catch (e) {\r\n                await this._reloadMessage();\r\n                bot = this._neededMarkupBot();\r\n            }\r\n            this._setButtons(chat, bot);\r\n        }\r\n        return this._buttons;\r\n    }\r\n    get buttonCount() {\r\n        if (!this._buttonsCount) {\r\n            if (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n                this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup) {\r\n                this._buttonsCount = this.replyMarkup.rows\r\n                    .map((r) => r.buttons.length)\r\n                    .reduce(function (a, b) {\r\n                    return a + b;\r\n                }, 0);\r\n            }\r\n            else {\r\n                this._buttonsCount = 0;\r\n            }\r\n        }\r\n        return this._buttonsCount;\r\n    }\r\n    get file() {\r\n        if (!this._file) {\r\n            const media = this.photo || this.document;\r\n            if (media) {\r\n                this._file = new file_1.File(media);\r\n            }\r\n        }\r\n        return this._file;\r\n    }\r\n    get photo() {\r\n        if (this.media instanceof api_1.Api.MessageMediaPhoto) {\r\n            if (this.media.photo instanceof api_1.Api.Photo)\r\n                return this.media.photo;\r\n        }\r\n        else if (this.action instanceof api_1.Api.MessageActionChatEditPhoto) {\r\n            return this.action.photo;\r\n        }\r\n        else {\r\n            return this.webPreview && this.webPreview.photo instanceof api_1.Api.Photo\r\n                ? this.webPreview.photo\r\n                : undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n    get document() {\r\n        if (this.media instanceof api_1.Api.MessageMediaDocument) {\r\n            if (this.media.document instanceof api_1.Api.Document)\r\n                return this.media.document;\r\n        }\r\n        else {\r\n            const web = this.webPreview;\r\n            return web && web.document instanceof api_1.Api.Document\r\n                ? web.document\r\n                : undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n    get webPreview() {\r\n        if (this.media instanceof api_1.Api.MessageMediaWebPage) {\r\n            if (this.media.webpage instanceof api_1.Api.WebPage)\r\n                return this.media.webpage;\r\n        }\r\n    }\r\n    get audio() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, (attr) => !attr.voice);\r\n    }\r\n    get voice() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, (attr) => !!attr.voice);\r\n    }\r\n    get video() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeVideo);\r\n    }\r\n    get videoNote() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeVideo, (attr) => !!attr.roundMessage);\r\n    }\r\n    get gif() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAnimated);\r\n    }\r\n    get sticker() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeSticker);\r\n    }\r\n    get contact() {\r\n        if (this.media instanceof api_1.Api.MessageMediaContact) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get game() {\r\n        if (this.media instanceof api_1.Api.MessageMediaGame) {\r\n            return this.media.game;\r\n        }\r\n    }\r\n    get geo() {\r\n        if (this.media instanceof api_1.Api.MessageMediaGeo ||\r\n            this.media instanceof api_1.Api.MessageMediaGeoLive ||\r\n            this.media instanceof api_1.Api.MessageMediaVenue) {\r\n            return this.media.geo;\r\n        }\r\n    }\r\n    get invoice() {\r\n        if (this.media instanceof api_1.Api.MessageMediaInvoice) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get poll() {\r\n        if (this.media instanceof api_1.Api.MessageMediaPoll) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get venue() {\r\n        if (this.media instanceof api_1.Api.MessageMediaVenue) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get dice() {\r\n        if (this.media instanceof api_1.Api.MessageMediaDice) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get actionEntities() {\r\n        return this._actionEntities;\r\n    }\r\n    get viaBot() {\r\n        return this._viaBot;\r\n    }\r\n    get viaInputBot() {\r\n        return this._viaInputBot;\r\n    }\r\n    get replyToMsgId() {\r\n        var _a;\r\n        return (_a = this.replyTo) === null || _a === void 0 ? void 0 : _a.replyToMsgId;\r\n    }\r\n    get toId() {\r\n        if (this._client && !this.out && this.isPrivate) {\r\n            return new api_1.Api.PeerUser({\r\n                userId: (0, users_1._selfId)(this._client),\r\n            });\r\n        }\r\n        return this.peerId;\r\n    }\r\n    getEntitiesText(cls) {\r\n        let ent = this.entities;\r\n        if (!ent || ent.length == 0)\r\n            return;\r\n        if (cls) {\r\n            ent = ent.filter((v) => v instanceof cls);\r\n        }\r\n        const texts = utils.getInnerText(this.message || \"\", ent);\r\n        const zip = (rows) => rows[0].map((_, c) => rows.map((row) => row[c]));\r\n        return zip([ent, texts]);\r\n    }\r\n    async getReplyMessage() {\r\n        if (!this._replyMessage && this._client) {\r\n            if (!this.replyTo)\r\n                return undefined;\r\n            // Bots cannot access other bots' messages by their ID.\r\n            // However they can access them through replies...\r\n            this._replyMessage = (await this._client.getMessages(this.isChannel ? await this.getInputChat() : undefined, {\r\n                ids: new api_1.Api.InputMessageReplyTo({ id: this.id }),\r\n            }))[0];\r\n            if (!this._replyMessage) {\r\n                // ...unless the current message got deleted.\r\n                //\r\n                // If that's the case, give it a second chance accessing\r\n                // directly by its ID.\r\n                this._replyMessage = (await this._client.getMessages(this.isChannel ? this._inputChat : undefined, {\r\n                    ids: this.replyToMsgId,\r\n                }))[0];\r\n            }\r\n        }\r\n        return this._replyMessage;\r\n    }\r\n    async respond(params) {\r\n        if (this._client) {\r\n            return this._client.sendMessage((await this.getInputChat()), params);\r\n        }\r\n    }\r\n    async reply(params) {\r\n        if (this._client) {\r\n            params.replyTo = this.id;\r\n            return this._client.sendMessage((await this.getInputChat()), params);\r\n        }\r\n    }\r\n    async forwardTo(entity) {\r\n        if (this._client) {\r\n            entity = await this._client.getInputEntity(entity);\r\n            const params = {\r\n                messages: [this.id],\r\n                fromPeer: (await this.getInputChat()),\r\n            };\r\n            return this._client.forwardMessages(entity, params);\r\n        }\r\n    }\r\n    async edit(params) {\r\n        const param = params;\r\n        if (this.fwdFrom || !this.out || !this._client)\r\n            return undefined;\r\n        if (param.linkPreview == undefined) {\r\n            param.linkPreview = !!this.webPreview;\r\n        }\r\n        if (param.buttons == undefined) {\r\n            param.buttons = this.replyMarkup;\r\n        }\r\n        param.message = this.id;\r\n        return this._client.editMessage((await this.getInputChat()), param);\r\n    }\r\n    async delete({ revoke } = { revoke: false }) {\r\n        if (this._client) {\r\n            return this._client.deleteMessages(await this.getInputChat(), [this.id], {\r\n                revoke,\r\n            });\r\n        }\r\n    }\r\n    async pin(params) {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(\"Failed to pin message due to cannot get input chat.\");\r\n            }\r\n            return this._client.pinMessage(entity, this.id, params);\r\n        }\r\n    }\r\n    async unpin(params) {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(\"Failed to unpin message due to cannot get input chat.\");\r\n            }\r\n            return this._client.unpinMessage(entity, this.id, params);\r\n        }\r\n    }\r\n    async downloadMedia(params) {\r\n        // small hack for patched method\r\n        if (this._client)\r\n            return this._client.downloadMedia(this, params || {});\r\n    }\r\n    async markAsRead() {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(`Failed to mark message id ${this.id} as read due to cannot get input chat.`);\r\n            }\r\n            return this._client.markAsRead(entity, this.id);\r\n        }\r\n    }\r\n    async click({ i, j, text, filter, data, sharePhone, shareGeo, password, }) {\r\n        if (!this.client) {\r\n            return;\r\n        }\r\n        if (data) {\r\n            const chat = await this.getInputChat();\r\n            if (!chat) {\r\n                return;\r\n            }\r\n            const button = new api_1.Api.KeyboardButtonCallback({\r\n                text: \"\",\r\n                data: data,\r\n            });\r\n            return await new messageButton_1.MessageButton(this.client, button, chat, undefined, this.id).click({\r\n                sharePhone: sharePhone,\r\n                shareGeo: shareGeo,\r\n                password: password,\r\n            });\r\n        }\r\n        if (this.poll) {\r\n            function findPoll(answers) {\r\n                if (i != undefined) {\r\n                    if (Array.isArray(i)) {\r\n                        const corrects = [];\r\n                        for (let x = 0; x < i.length; x++) {\r\n                            corrects.push(answers[x].option);\r\n                        }\r\n                        return corrects;\r\n                    }\r\n                    return [answers[i].option];\r\n                }\r\n                if (text != undefined) {\r\n                    if (typeof text == \"function\") {\r\n                        for (const answer of answers) {\r\n                            if (text(answer.text)) {\r\n                                return [answer.option];\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (const answer of answers) {\r\n                            if (answer.text == text) {\r\n                                return [answer.option];\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n                if (filter != undefined) {\r\n                    for (const answer of answers) {\r\n                        if (filter(answer)) {\r\n                            return [answer.option];\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            const options = findPoll(this.poll.poll.answers) || [];\r\n            return await this.client.invoke(new api_1.Api.messages.SendVote({\r\n                peer: this.inputChat,\r\n                msgId: this.id,\r\n                options: options,\r\n            }));\r\n        }\r\n        if (!(await this.getButtons())) {\r\n            return; // Accessing the property sets this._buttons[_flat]\r\n        }\r\n        function findButton(self) {\r\n            if (!self._buttonsFlat || !self._buttons) {\r\n                return;\r\n            }\r\n            if (Array.isArray(i)) {\r\n                i = i[0];\r\n            }\r\n            if (text != undefined) {\r\n                if (typeof text == \"function\") {\r\n                    for (const button of self._buttonsFlat) {\r\n                        if (text(button.text)) {\r\n                            return button;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (const button of self._buttonsFlat) {\r\n                        if (button.text == text) {\r\n                            return button;\r\n                        }\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if (filter != undefined) {\r\n                for (const button of self._buttonsFlat) {\r\n                    if (filter(button)) {\r\n                        return button;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if (i == undefined) {\r\n                i = 0;\r\n            }\r\n            if (j == undefined) {\r\n                return self._buttonsFlat[i];\r\n            }\r\n            else {\r\n                return self._buttons[i][j];\r\n            }\r\n        }\r\n        const button = findButton(this);\r\n        if (button) {\r\n            return await button.click({\r\n                sharePhone: sharePhone,\r\n                shareGeo: shareGeo,\r\n                password: password,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Helper methods to set the buttons given the input sender and chat.\r\n     */\r\n    _setButtons(chat, bot) {\r\n        if (this.client &&\r\n            (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n                this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\r\n            this._buttons = [];\r\n            this._buttonsFlat = [];\r\n            for (const row of this.replyMarkup.rows) {\r\n                const tmp = [];\r\n                for (const button of row.buttons) {\r\n                    const btn = new messageButton_1.MessageButton(this.client, button, chat, bot, this.id);\r\n                    tmp.push(btn);\r\n                    this._buttonsFlat.push(btn);\r\n                }\r\n                this._buttons.push(tmp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *Returns the input peer of the bot that's needed for the reply markup.\r\n\r\n     This is necessary for `KeyboardButtonSwitchInline` since we need\r\n     to know what bot we want to start. Raises ``Error`` if the bot\r\n     cannot be found but is needed. Returns `None` if it's not needed.\r\n     */\r\n    _neededMarkupBot() {\r\n        if (!this.client || this.replyMarkup == undefined) {\r\n            return;\r\n        }\r\n        if (!(this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n            this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\r\n            return;\r\n        }\r\n        for (const row of this.replyMarkup.rows) {\r\n            for (const button of row.buttons) {\r\n                if (button instanceof api_1.Api.KeyboardButtonSwitchInline) {\r\n                    if (button.samePeer || !this.viaBotId) {\r\n                        const bot = this._inputSender;\r\n                        if (!bot)\r\n                            throw new Error(\"No input sender\");\r\n                        return bot;\r\n                    }\r\n                    else {\r\n                        const ent = this.client._entityCache.get(this.viaBotId);\r\n                        if (!ent)\r\n                            throw new Error(\"No input sender\");\r\n                        return ent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // TODO fix this\r\n    _documentByAttribute(kind, condition) {\r\n        const doc = this.document;\r\n        if (doc) {\r\n            for (const attr of doc.attributes) {\r\n                if (attr instanceof kind) {\r\n                    if (condition == undefined ||\r\n                        (typeof condition == \"function\" && condition(attr))) {\r\n                        return doc;\r\n                    }\r\n                    return undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.CustomMessage = CustomMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}