{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StoreSession = void 0;\nconst buffer_1 = require(\"buffer/\");\nconst Memory_1 = require(\"./Memory\");\nconst store2_1 = __importDefault(require(\"store2\"));\nconst AuthKey_1 = require(\"../crypto/AuthKey\");\nclass StoreSession extends Memory_1.MemorySession {\n  constructor(sessionName, divider = \":\") {\n    super();\n    if (typeof localStorage === \"undefined\" || localStorage === null) {\n      const LocalStorage = require(\"./localStorage\").LocalStorage;\n      this.store = store2_1.default.area(sessionName, new LocalStorage(\"./\" + sessionName));\n    } else {\n      this.store = store2_1.default.area(sessionName, localStorage);\n    }\n    if (divider == undefined) {\n      divider = \":\";\n    }\n    this.sessionName = sessionName + divider;\n  }\n  async load() {\n    let authKey = this.store.get(this.sessionName + \"authKey\");\n    if (authKey && typeof authKey === \"object\") {\n      this._authKey = new AuthKey_1.AuthKey();\n      if (\"data\" in authKey) {\n        authKey = buffer_1.Buffer.from(authKey.data);\n      }\n      await this._authKey.setKey(authKey);\n    }\n    const dcId = this.store.get(this.sessionName + \"dcId\");\n    if (dcId) {\n      this._dcId = dcId;\n    }\n    const port = this.store.get(this.sessionName + \"port\");\n    if (port) {\n      this._port = port;\n    }\n    const serverAddress = this.store.get(this.sessionName + \"serverAddress\");\n    if (serverAddress) {\n      this._serverAddress = serverAddress;\n    }\n  }\n  setDC(dcId, serverAddress, port) {\n    this.store.set(this.sessionName + \"dcId\", dcId);\n    this.store.set(this.sessionName + \"port\", port);\n    this.store.set(this.sessionName + \"serverAddress\", serverAddress);\n    super.setDC(dcId, serverAddress, port);\n  }\n  set authKey(value) {\n    this._authKey = value;\n    this.store.set(this.sessionName + \"authKey\", value === null || value === void 0 ? void 0 : value.getKey());\n  }\n  get authKey() {\n    return this._authKey;\n  }\n  processEntities(tlo) {\n    const rows = this._entitiesToRows(tlo);\n    if (!rows) {\n      return;\n    }\n    for (const row of rows) {\n      row.push(new Date().getTime().toString());\n      this.store.set(this.sessionName + row[0], row);\n    }\n  }\n  getEntityRowsById(id, exact = true) {\n    return this.store.get(this.sessionName + id.toString());\n  }\n}\nexports.StoreSession = StoreSession;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","StoreSession","buffer_1","require","Memory_1","store2_1","AuthKey_1","MemorySession","constructor","sessionName","divider","localStorage","LocalStorage","store","default","area","undefined","load","authKey","get","_authKey","AuthKey","Buffer","from","data","setKey","dcId","_dcId","port","_port","serverAddress","_serverAddress","setDC","set","getKey","processEntities","tlo","rows","_entitiesToRows","row","push","Date","getTime","toString","getEntityRowsById","id","exact"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/sessions/StoreSession.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StoreSession = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst Memory_1 = require(\"./Memory\");\r\nconst store2_1 = __importDefault(require(\"store2\"));\r\nconst AuthKey_1 = require(\"../crypto/AuthKey\");\r\nclass StoreSession extends Memory_1.MemorySession {\r\n    constructor(sessionName, divider = \":\") {\r\n        super();\r\n        if (typeof localStorage === \"undefined\" || localStorage === null) {\r\n            const LocalStorage = require(\"./localStorage\").LocalStorage;\r\n            this.store = store2_1.default.area(sessionName, new LocalStorage(\"./\" + sessionName));\r\n        }\r\n        else {\r\n            this.store = store2_1.default.area(sessionName, localStorage);\r\n        }\r\n        if (divider == undefined) {\r\n            divider = \":\";\r\n        }\r\n        this.sessionName = sessionName + divider;\r\n    }\r\n    async load() {\r\n        let authKey = this.store.get(this.sessionName + \"authKey\");\r\n        if (authKey && typeof authKey === \"object\") {\r\n            this._authKey = new AuthKey_1.AuthKey();\r\n            if (\"data\" in authKey) {\r\n                authKey = buffer_1.Buffer.from(authKey.data);\r\n            }\r\n            await this._authKey.setKey(authKey);\r\n        }\r\n        const dcId = this.store.get(this.sessionName + \"dcId\");\r\n        if (dcId) {\r\n            this._dcId = dcId;\r\n        }\r\n        const port = this.store.get(this.sessionName + \"port\");\r\n        if (port) {\r\n            this._port = port;\r\n        }\r\n        const serverAddress = this.store.get(this.sessionName + \"serverAddress\");\r\n        if (serverAddress) {\r\n            this._serverAddress = serverAddress;\r\n        }\r\n    }\r\n    setDC(dcId, serverAddress, port) {\r\n        this.store.set(this.sessionName + \"dcId\", dcId);\r\n        this.store.set(this.sessionName + \"port\", port);\r\n        this.store.set(this.sessionName + \"serverAddress\", serverAddress);\r\n        super.setDC(dcId, serverAddress, port);\r\n    }\r\n    set authKey(value) {\r\n        this._authKey = value;\r\n        this.store.set(this.sessionName + \"authKey\", value === null || value === void 0 ? void 0 : value.getKey());\r\n    }\r\n    get authKey() {\r\n        return this._authKey;\r\n    }\r\n    processEntities(tlo) {\r\n        const rows = this._entitiesToRows(tlo);\r\n        if (!rows) {\r\n            return;\r\n        }\r\n        for (const row of rows) {\r\n            row.push(new Date().getTime().toString());\r\n            this.store.set(this.sessionName + row[0], row);\r\n        }\r\n    }\r\n    getEntityRowsById(id, exact = true) {\r\n        return this.store.get(this.sessionName + id.toString());\r\n    }\r\n}\r\nexports.StoreSession = StoreSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}