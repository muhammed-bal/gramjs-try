{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RPCResult = void 0;\nconst api_1 = require(\"../api\");\nconst _1 = require(\"./\");\nclass RPCResult {\n  constructor(reqMsgId, body, error) {\n    this.CONSTRUCTOR_ID = 0xf35c6d01;\n    this.reqMsgId = reqMsgId;\n    this.body = body;\n    this.error = error;\n    this.classType = \"constructor\";\n  }\n  static async fromReader(reader) {\n    const msgId = reader.readLong();\n    const innerCode = reader.readInt(false);\n    if (innerCode === api_1.Api.RpcError.CONSTRUCTOR_ID) {\n      return new RPCResult(msgId, undefined, api_1.Api.RpcError.fromReader(reader));\n    }\n    if (innerCode === _1.GZIPPacked.CONSTRUCTOR_ID) {\n      return new RPCResult(msgId, (await _1.GZIPPacked.fromReader(reader)).data);\n    }\n    reader.seek(-4);\n    // This reader.read() will read more than necessary, but it's okay.\n    // We could make use of MessageContainer's length here, but since\n    // it's not necessary we don't need to care about it.\n    return new RPCResult(msgId, reader.read(), undefined);\n  }\n}\nexports.RPCResult = RPCResult;\nRPCResult.CONSTRUCTOR_ID = 0xf35c6d01;\nRPCResult.classType = \"constructor\";","map":{"version":3,"names":["Object","defineProperty","exports","value","RPCResult","api_1","require","_1","constructor","reqMsgId","body","error","CONSTRUCTOR_ID","classType","fromReader","reader","msgId","readLong","innerCode","readInt","Api","RpcError","undefined","GZIPPacked","data","seek","read"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/tl/core/RPCResult.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RPCResult = void 0;\r\nconst api_1 = require(\"../api\");\r\nconst _1 = require(\"./\");\r\nclass RPCResult {\r\n    constructor(reqMsgId, body, error) {\r\n        this.CONSTRUCTOR_ID = 0xf35c6d01;\r\n        this.reqMsgId = reqMsgId;\r\n        this.body = body;\r\n        this.error = error;\r\n        this.classType = \"constructor\";\r\n    }\r\n    static async fromReader(reader) {\r\n        const msgId = reader.readLong();\r\n        const innerCode = reader.readInt(false);\r\n        if (innerCode === api_1.Api.RpcError.CONSTRUCTOR_ID) {\r\n            return new RPCResult(msgId, undefined, api_1.Api.RpcError.fromReader(reader));\r\n        }\r\n        if (innerCode === _1.GZIPPacked.CONSTRUCTOR_ID) {\r\n            return new RPCResult(msgId, (await _1.GZIPPacked.fromReader(reader)).data);\r\n        }\r\n        reader.seek(-4);\r\n        // This reader.read() will read more than necessary, but it's okay.\r\n        // We could make use of MessageContainer's length here, but since\r\n        // it's not necessary we don't need to care about it.\r\n        return new RPCResult(msgId, reader.read(), undefined);\r\n    }\r\n}\r\nexports.RPCResult = RPCResult;\r\nRPCResult.CONSTRUCTOR_ID = 0xf35c6d01;\r\nRPCResult.classType = \"constructor\";\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,MAAMC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMF,SAAS,CAAC;EACZI,WAAWA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC/B,IAAI,CAACC,cAAc,GAAG,UAAU;IAChC,IAAI,CAACH,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,SAAS,GAAG,aAAa;EAClC;EACA,aAAaC,UAAUA,CAACC,MAAM,EAAE;IAC5B,MAAMC,KAAK,GAAGD,MAAM,CAACE,QAAQ,CAAC,CAAC;IAC/B,MAAMC,SAAS,GAAGH,MAAM,CAACI,OAAO,CAAC,KAAK,CAAC;IACvC,IAAID,SAAS,KAAKb,KAAK,CAACe,GAAG,CAACC,QAAQ,CAACT,cAAc,EAAE;MACjD,OAAO,IAAIR,SAAS,CAACY,KAAK,EAAEM,SAAS,EAAEjB,KAAK,CAACe,GAAG,CAACC,QAAQ,CAACP,UAAU,CAACC,MAAM,CAAC,CAAC;IACjF;IACA,IAAIG,SAAS,KAAKX,EAAE,CAACgB,UAAU,CAACX,cAAc,EAAE;MAC5C,OAAO,IAAIR,SAAS,CAACY,KAAK,EAAE,CAAC,MAAMT,EAAE,CAACgB,UAAU,CAACT,UAAU,CAACC,MAAM,CAAC,EAAES,IAAI,CAAC;IAC9E;IACAT,MAAM,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;IACf;IACA;IACA;IACA,OAAO,IAAIrB,SAAS,CAACY,KAAK,EAAED,MAAM,CAACW,IAAI,CAAC,CAAC,EAAEJ,SAAS,CAAC;EACzD;AACJ;AACApB,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7BA,SAAS,CAACQ,cAAc,GAAG,UAAU;AACrCR,SAAS,CAACS,SAAS,GAAG,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}