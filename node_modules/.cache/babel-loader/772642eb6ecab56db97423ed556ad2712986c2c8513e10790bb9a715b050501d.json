{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildReplyMarkup = void 0;\nconst tl_1 = require(\"../tl\");\nconst button_1 = require(\"../tl/custom/button\");\nconst messageButton_1 = require(\"../tl/custom/messageButton\");\nconst Helpers_1 = require(\"../Helpers\");\n// ButtonMethods\n/** @hidden */\nfunction buildReplyMarkup(buttons, inlineOnly = false) {\n  if (buttons == undefined) {\n    return undefined;\n  }\n  if (\"SUBCLASS_OF_ID\" in buttons) {\n    if (buttons.SUBCLASS_OF_ID == 0xe2e10ef2) {\n      return buttons;\n    }\n  }\n  if (!(0, Helpers_1.isArrayLike)(buttons)) {\n    buttons = [[buttons]];\n  } else if (!buttons || !(0, Helpers_1.isArrayLike)(buttons[0])) {\n    // @ts-ignore\n    buttons = [buttons];\n  }\n  let isInline = false;\n  let isNormal = false;\n  let resize = undefined;\n  const singleUse = false;\n  const selective = false;\n  const rows = [];\n  // @ts-ignore\n  for (const row of buttons) {\n    const current = [];\n    for (let button of row) {\n      if (button instanceof button_1.Button) {\n        if (button.resize != undefined) {\n          resize = button.resize;\n        }\n        if (button.singleUse != undefined) {\n          resize = button.singleUse;\n        }\n        if (button.selective != undefined) {\n          resize = button.selective;\n        }\n        button = button.button;\n      } else if (button instanceof messageButton_1.MessageButton) {\n        button = button.button;\n      }\n      const inline = button_1.Button._isInline(button);\n      if (!isInline && inline) {\n        isInline = true;\n      }\n      if (!isNormal && inline) {\n        isNormal = false;\n      }\n      if (button.SUBCLASS_OF_ID == 0xbad74a3) {\n        // 0xbad74a3 == crc32(b'KeyboardButton')\n        current.push(button);\n      }\n    }\n    if (current) {\n      rows.push(new tl_1.Api.KeyboardButtonRow({\n        buttons: current\n      }));\n    }\n  }\n  if (inlineOnly && isNormal) {\n    throw new Error(\"You cannot use non-inline buttons here\");\n  } else if (isInline === isNormal && isNormal) {\n    throw new Error(\"You cannot mix inline with normal buttons\");\n  } else if (isInline) {\n    return new tl_1.Api.ReplyInlineMarkup({\n      rows: rows\n    });\n  }\n  return new tl_1.Api.ReplyKeyboardMarkup({\n    rows: rows,\n    resize: resize,\n    singleUse: singleUse,\n    selective: selective\n  });\n}\nexports.buildReplyMarkup = buildReplyMarkup;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildReplyMarkup","tl_1","require","button_1","messageButton_1","Helpers_1","buttons","inlineOnly","undefined","SUBCLASS_OF_ID","isArrayLike","isInline","isNormal","resize","singleUse","selective","rows","row","current","button","Button","MessageButton","inline","_isInline","push","Api","KeyboardButtonRow","Error","ReplyInlineMarkup","ReplyKeyboardMarkup"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/client/buttons.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildReplyMarkup = void 0;\r\nconst tl_1 = require(\"../tl\");\r\nconst button_1 = require(\"../tl/custom/button\");\r\nconst messageButton_1 = require(\"../tl/custom/messageButton\");\r\nconst Helpers_1 = require(\"../Helpers\");\r\n// ButtonMethods\r\n/** @hidden */\r\nfunction buildReplyMarkup(buttons, inlineOnly = false) {\r\n    if (buttons == undefined) {\r\n        return undefined;\r\n    }\r\n    if (\"SUBCLASS_OF_ID\" in buttons) {\r\n        if (buttons.SUBCLASS_OF_ID == 0xe2e10ef2) {\r\n            return buttons;\r\n        }\r\n    }\r\n    if (!(0, Helpers_1.isArrayLike)(buttons)) {\r\n        buttons = [[buttons]];\r\n    }\r\n    else if (!buttons || !(0, Helpers_1.isArrayLike)(buttons[0])) {\r\n        // @ts-ignore\r\n        buttons = [buttons];\r\n    }\r\n    let isInline = false;\r\n    let isNormal = false;\r\n    let resize = undefined;\r\n    const singleUse = false;\r\n    const selective = false;\r\n    const rows = [];\r\n    // @ts-ignore\r\n    for (const row of buttons) {\r\n        const current = [];\r\n        for (let button of row) {\r\n            if (button instanceof button_1.Button) {\r\n                if (button.resize != undefined) {\r\n                    resize = button.resize;\r\n                }\r\n                if (button.singleUse != undefined) {\r\n                    resize = button.singleUse;\r\n                }\r\n                if (button.selective != undefined) {\r\n                    resize = button.selective;\r\n                }\r\n                button = button.button;\r\n            }\r\n            else if (button instanceof messageButton_1.MessageButton) {\r\n                button = button.button;\r\n            }\r\n            const inline = button_1.Button._isInline(button);\r\n            if (!isInline && inline) {\r\n                isInline = true;\r\n            }\r\n            if (!isNormal && inline) {\r\n                isNormal = false;\r\n            }\r\n            if (button.SUBCLASS_OF_ID == 0xbad74a3) {\r\n                // 0xbad74a3 == crc32(b'KeyboardButton')\r\n                current.push(button);\r\n            }\r\n        }\r\n        if (current) {\r\n            rows.push(new tl_1.Api.KeyboardButtonRow({\r\n                buttons: current,\r\n            }));\r\n        }\r\n    }\r\n    if (inlineOnly && isNormal) {\r\n        throw new Error(\"You cannot use non-inline buttons here\");\r\n    }\r\n    else if (isInline === isNormal && isNormal) {\r\n        throw new Error(\"You cannot mix inline with normal buttons\");\r\n    }\r\n    else if (isInline) {\r\n        return new tl_1.Api.ReplyInlineMarkup({\r\n            rows: rows,\r\n        });\r\n    }\r\n    return new tl_1.Api.ReplyKeyboardMarkup({\r\n        rows: rows,\r\n        resize: resize,\r\n        singleUse: singleUse,\r\n        selective: selective,\r\n    });\r\n}\r\nexports.buildReplyMarkup = buildReplyMarkup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}