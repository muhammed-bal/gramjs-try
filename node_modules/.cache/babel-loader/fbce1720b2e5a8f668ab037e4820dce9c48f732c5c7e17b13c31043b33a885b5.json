{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = void 0;\nconst buffer_1 = require(\"buffer/\");\nconst api_1 = require(\"../api\");\nconst __1 = require(\"../../\");\nconst Helpers_1 = require(\"../../Helpers\");\nconst inspect_1 = require(\"../../inspect\");\nclass Button {\n  constructor(button, resize, singleUse, selective) {\n    this.button = button;\n    this.resize = resize;\n    this.singleUse = singleUse;\n    this.selective = selective;\n  }\n  [inspect_1.inspect.custom]() {\n    return (0, Helpers_1.betterConsoleLog)(this);\n  }\n  static _isInline(button) {\n    return button instanceof api_1.Api.KeyboardButtonCallback || button instanceof api_1.Api.KeyboardButtonSwitchInline || button instanceof api_1.Api.KeyboardButtonUrl || button instanceof api_1.Api.KeyboardButtonUrlAuth || button instanceof api_1.Api.InputKeyboardButtonUrlAuth;\n  }\n  static inline(text, data) {\n    if (!data) {\n      data = buffer_1.Buffer.from(text, \"utf-8\");\n    }\n    if (data.length > 64) {\n      throw new Error(\"Too many bytes for the data\");\n    }\n    return new api_1.Api.KeyboardButtonCallback({\n      text: text,\n      data: data\n    });\n  }\n  static switchInline(text, query = \"\", samePeer = false) {\n    return new api_1.Api.KeyboardButtonSwitchInline({\n      text,\n      query,\n      samePeer\n    });\n  }\n  static url(text, url) {\n    return new api_1.Api.KeyboardButtonUrl({\n      text: text,\n      url: url || text\n    });\n  }\n  static auth(text, url, bot, writeAccess, fwdText) {\n    return new api_1.Api.InputKeyboardButtonUrlAuth({\n      text,\n      url: url || text,\n      bot: __1.utils.getInputUser(bot || new api_1.Api.InputUserSelf()),\n      requestWriteAccess: writeAccess,\n      fwdText: fwdText\n    });\n  }\n  static text(text, resize, singleUse, selective) {\n    return new this(new api_1.Api.KeyboardButton({\n      text\n    }), resize, singleUse, selective);\n  }\n  static requestLocation(text, resize, singleUse, selective) {\n    return new this(new api_1.Api.KeyboardButtonRequestGeoLocation({\n      text\n    }), resize, singleUse, selective);\n  }\n  static requestPhone(text, resize, singleUse, selective) {\n    return new this(new api_1.Api.KeyboardButtonRequestPhone({\n      text\n    }), resize, singleUse, selective);\n  }\n  static requestPoll(text, resize, singleUse, selective) {\n    return new this(new api_1.Api.KeyboardButtonRequestPoll({\n      text\n    }), resize, singleUse, selective);\n  }\n  static clear() {\n    return new api_1.Api.ReplyKeyboardHide({});\n  }\n  static forceReply() {\n    return new api_1.Api.ReplyKeyboardForceReply({});\n  }\n}\nexports.Button = Button;","map":{"version":3,"names":["Object","defineProperty","exports","value","Button","buffer_1","require","api_1","__1","Helpers_1","inspect_1","constructor","button","resize","singleUse","selective","inspect","custom","betterConsoleLog","_isInline","Api","KeyboardButtonCallback","KeyboardButtonSwitchInline","KeyboardButtonUrl","KeyboardButtonUrlAuth","InputKeyboardButtonUrlAuth","inline","text","data","Buffer","from","length","Error","switchInline","query","samePeer","url","auth","bot","writeAccess","fwdText","utils","getInputUser","InputUserSelf","requestWriteAccess","KeyboardButton","requestLocation","KeyboardButtonRequestGeoLocation","requestPhone","KeyboardButtonRequestPhone","requestPoll","KeyboardButtonRequestPoll","clear","ReplyKeyboardHide","forceReply","ReplyKeyboardForceReply"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/tl/custom/button.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Button = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst api_1 = require(\"../api\");\r\nconst __1 = require(\"../../\");\r\nconst Helpers_1 = require(\"../../Helpers\");\r\nconst inspect_1 = require(\"../../inspect\");\r\nclass Button {\r\n    constructor(button, resize, singleUse, selective) {\r\n        this.button = button;\r\n        this.resize = resize;\r\n        this.singleUse = singleUse;\r\n        this.selective = selective;\r\n    }\r\n    [inspect_1.inspect.custom]() {\r\n        return (0, Helpers_1.betterConsoleLog)(this);\r\n    }\r\n    static _isInline(button) {\r\n        return (button instanceof api_1.Api.KeyboardButtonCallback ||\r\n            button instanceof api_1.Api.KeyboardButtonSwitchInline ||\r\n            button instanceof api_1.Api.KeyboardButtonUrl ||\r\n            button instanceof api_1.Api.KeyboardButtonUrlAuth ||\r\n            button instanceof api_1.Api.InputKeyboardButtonUrlAuth);\r\n    }\r\n    static inline(text, data) {\r\n        if (!data) {\r\n            data = buffer_1.Buffer.from(text, \"utf-8\");\r\n        }\r\n        if (data.length > 64) {\r\n            throw new Error(\"Too many bytes for the data\");\r\n        }\r\n        return new api_1.Api.KeyboardButtonCallback({\r\n            text: text,\r\n            data: data,\r\n        });\r\n    }\r\n    static switchInline(text, query = \"\", samePeer = false) {\r\n        return new api_1.Api.KeyboardButtonSwitchInline({\r\n            text,\r\n            query,\r\n            samePeer,\r\n        });\r\n    }\r\n    static url(text, url) {\r\n        return new api_1.Api.KeyboardButtonUrl({\r\n            text: text,\r\n            url: url || text,\r\n        });\r\n    }\r\n    static auth(text, url, bot, writeAccess, fwdText) {\r\n        return new api_1.Api.InputKeyboardButtonUrlAuth({\r\n            text,\r\n            url: url || text,\r\n            bot: __1.utils.getInputUser(bot || new api_1.Api.InputUserSelf()),\r\n            requestWriteAccess: writeAccess,\r\n            fwdText: fwdText,\r\n        });\r\n    }\r\n    static text(text, resize, singleUse, selective) {\r\n        return new this(new api_1.Api.KeyboardButton({ text }), resize, singleUse, selective);\r\n    }\r\n    static requestLocation(text, resize, singleUse, selective) {\r\n        return new this(new api_1.Api.KeyboardButtonRequestGeoLocation({ text }), resize, singleUse, selective);\r\n    }\r\n    static requestPhone(text, resize, singleUse, selective) {\r\n        return new this(new api_1.Api.KeyboardButtonRequestPhone({ text }), resize, singleUse, selective);\r\n    }\r\n    static requestPoll(text, resize, singleUse, selective) {\r\n        return new this(new api_1.Api.KeyboardButtonRequestPoll({ text }), resize, singleUse, selective);\r\n    }\r\n    static clear() {\r\n        return new api_1.Api.ReplyKeyboardHide({});\r\n    }\r\n    static forceReply() {\r\n        return new api_1.Api.ReplyKeyboardForceReply({});\r\n    }\r\n}\r\nexports.Button = Button;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}