{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GZIPPacked = void 0;\nconst buffer_1 = require(\"buffer/\");\nconst __1 = require(\"../\");\nconst pako_1 = require(\"pako\");\nclass GZIPPacked {\n  constructor(data) {\n    this.data = data;\n    this.CONSTRUCTOR_ID = 0x3072cfa1;\n    this.classType = \"constructor\";\n  }\n  static async gzipIfSmaller(contentRelated, data) {\n    if (contentRelated && data.length > 512) {\n      const gzipped = await new GZIPPacked(data).toBytes();\n      if (gzipped.length < data.length) {\n        return gzipped;\n      }\n    }\n    return data;\n  }\n  static gzip(input) {\n    return buffer_1.Buffer.from(input);\n    // TODO this usually makes it faster for large requests\n    //return Buffer.from(deflate(input, { level: 9, gzip: true }))\n  }\n\n  static ungzip(input) {\n    return buffer_1.Buffer.from((0, pako_1.inflate)(input));\n  }\n  async toBytes() {\n    const g = buffer_1.Buffer.alloc(4);\n    g.writeUInt32LE(GZIPPacked.CONSTRUCTOR_ID, 0);\n    return buffer_1.Buffer.concat([g, (0, __1.serializeBytes)(await GZIPPacked.gzip(this.data))]);\n  }\n  static async read(reader) {\n    const constructor = reader.readInt(false);\n    if (constructor !== GZIPPacked.CONSTRUCTOR_ID) {\n      throw new Error(\"not equal\");\n    }\n    return GZIPPacked.gzip(reader.tgReadBytes());\n  }\n  static async fromReader(reader) {\n    const data = reader.tgReadBytes();\n    return new GZIPPacked(await GZIPPacked.ungzip(data));\n  }\n}\nexports.GZIPPacked = GZIPPacked;\nGZIPPacked.CONSTRUCTOR_ID = 0x3072cfa1;\nGZIPPacked.classType = \"constructor\";","map":{"version":3,"names":["Object","defineProperty","exports","value","GZIPPacked","buffer_1","require","__1","pako_1","constructor","data","CONSTRUCTOR_ID","classType","gzipIfSmaller","contentRelated","length","gzipped","toBytes","gzip","input","Buffer","from","ungzip","inflate","g","alloc","writeUInt32LE","concat","serializeBytes","read","reader","readInt","Error","tgReadBytes","fromReader"],"sources":["C:/Users/Muhammed/Desktop/REACT_JS/dene-gramjs/node_modules/telegram/tl/core/GZIPPacked.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GZIPPacked = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst __1 = require(\"../\");\r\nconst pako_1 = require(\"pako\");\r\nclass GZIPPacked {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.CONSTRUCTOR_ID = 0x3072cfa1;\r\n        this.classType = \"constructor\";\r\n    }\r\n    static async gzipIfSmaller(contentRelated, data) {\r\n        if (contentRelated && data.length > 512) {\r\n            const gzipped = await new GZIPPacked(data).toBytes();\r\n            if (gzipped.length < data.length) {\r\n                return gzipped;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    static gzip(input) {\r\n        return buffer_1.Buffer.from(input);\r\n        // TODO this usually makes it faster for large requests\r\n        //return Buffer.from(deflate(input, { level: 9, gzip: true }))\r\n    }\r\n    static ungzip(input) {\r\n        return buffer_1.Buffer.from((0, pako_1.inflate)(input));\r\n    }\r\n    async toBytes() {\r\n        const g = buffer_1.Buffer.alloc(4);\r\n        g.writeUInt32LE(GZIPPacked.CONSTRUCTOR_ID, 0);\r\n        return buffer_1.Buffer.concat([\r\n            g,\r\n            (0, __1.serializeBytes)(await GZIPPacked.gzip(this.data)),\r\n        ]);\r\n    }\r\n    static async read(reader) {\r\n        const constructor = reader.readInt(false);\r\n        if (constructor !== GZIPPacked.CONSTRUCTOR_ID) {\r\n            throw new Error(\"not equal\");\r\n        }\r\n        return GZIPPacked.gzip(reader.tgReadBytes());\r\n    }\r\n    static async fromReader(reader) {\r\n        const data = reader.tgReadBytes();\r\n        return new GZIPPacked(await GZIPPacked.ungzip(data));\r\n    }\r\n}\r\nexports.GZIPPacked = GZIPPacked;\r\nGZIPPacked.CONSTRUCTOR_ID = 0x3072cfa1;\r\nGZIPPacked.classType = \"constructor\";\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,SAAS,CAAC;AACnC,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMF,UAAU,CAAC;EACbK,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,cAAc,GAAG,UAAU;IAChC,IAAI,CAACC,SAAS,GAAG,aAAa;EAClC;EACA,aAAaC,aAAaA,CAACC,cAAc,EAAEJ,IAAI,EAAE;IAC7C,IAAII,cAAc,IAAIJ,IAAI,CAACK,MAAM,GAAG,GAAG,EAAE;MACrC,MAAMC,OAAO,GAAG,MAAM,IAAIZ,UAAU,CAACM,IAAI,CAAC,CAACO,OAAO,CAAC,CAAC;MACpD,IAAID,OAAO,CAACD,MAAM,GAAGL,IAAI,CAACK,MAAM,EAAE;QAC9B,OAAOC,OAAO;MAClB;IACJ;IACA,OAAON,IAAI;EACf;EACA,OAAOQ,IAAIA,CAACC,KAAK,EAAE;IACf,OAAOd,QAAQ,CAACe,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;IAClC;IACA;EACJ;;EACA,OAAOG,MAAMA,CAACH,KAAK,EAAE;IACjB,OAAOd,QAAQ,CAACe,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEb,MAAM,CAACe,OAAO,EAAEJ,KAAK,CAAC,CAAC;EAC3D;EACA,MAAMF,OAAOA,CAAA,EAAG;IACZ,MAAMO,CAAC,GAAGnB,QAAQ,CAACe,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;IAClCD,CAAC,CAACE,aAAa,CAACtB,UAAU,CAACO,cAAc,EAAE,CAAC,CAAC;IAC7C,OAAON,QAAQ,CAACe,MAAM,CAACO,MAAM,CAAC,CAC1BH,CAAC,EACD,CAAC,CAAC,EAAEjB,GAAG,CAACqB,cAAc,EAAE,MAAMxB,UAAU,CAACc,IAAI,CAAC,IAAI,CAACR,IAAI,CAAC,CAAC,CAC5D,CAAC;EACN;EACA,aAAamB,IAAIA,CAACC,MAAM,EAAE;IACtB,MAAMrB,WAAW,GAAGqB,MAAM,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAItB,WAAW,KAAKL,UAAU,CAACO,cAAc,EAAE;MAC3C,MAAM,IAAIqB,KAAK,CAAC,WAAW,CAAC;IAChC;IACA,OAAO5B,UAAU,CAACc,IAAI,CAACY,MAAM,CAACG,WAAW,CAAC,CAAC,CAAC;EAChD;EACA,aAAaC,UAAUA,CAACJ,MAAM,EAAE;IAC5B,MAAMpB,IAAI,GAAGoB,MAAM,CAACG,WAAW,CAAC,CAAC;IACjC,OAAO,IAAI7B,UAAU,CAAC,MAAMA,UAAU,CAACkB,MAAM,CAACZ,IAAI,CAAC,CAAC;EACxD;AACJ;AACAR,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/BA,UAAU,CAACO,cAAc,GAAG,UAAU;AACtCP,UAAU,CAACQ,SAAS,GAAG,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}